// Mocks generated by Mockito 5.4.4 from annotations
// in newsfeed_test/test/unit/news_feed_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:newsfeed_test/data/failure.dart' as _i6;
import 'package:newsfeed_test/data/models/news_article/news_article.dart'
    as _i8;
import 'package:newsfeed_test/data/models/response/response_wrapper.dart'
    as _i7;
import 'package:newsfeed_test/domain/repositories/news_feed_repository.dart'
    as _i2;
import 'package:newsfeed_test/domain/usecases/news_feed_usecase.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNewsFeedRepository_0 extends _i1.SmartFake
    implements _i2.NewsFeedRepository {
  _FakeNewsFeedRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NewsFeedUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsFeedUseCase extends _i1.Mock implements _i4.NewsFeedUseCase {
  MockNewsFeedUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.NewsFeedRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeNewsFeedRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.NewsFeedRepository);

  @override
  _i5.Future<
          _i3.Either<_i6.Failure, _i7.ResponseWrapper<List<_i8.NewsArticle>?>>>
      executeGetNewsArticles({
    String? page,
    String? country = r'ca',
    String? language = r'en',
    String? category,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #executeGetNewsArticles,
              [],
              {
                #page: page,
                #country: country,
                #language: language,
                #category: category,
              },
            ),
            returnValue: _i5.Future<
                    _i3.Either<_i6.Failure,
                        _i7.ResponseWrapper<List<_i8.NewsArticle>?>>>.value(
                _FakeEither_1<_i6.Failure,
                    _i7.ResponseWrapper<List<_i8.NewsArticle>?>>(
              this,
              Invocation.method(
                #executeGetNewsArticles,
                [],
                {
                  #page: page,
                  #country: country,
                  #language: language,
                  #category: category,
                },
              ),
            )),
          ) as _i5.Future<
              _i3.Either<_i6.Failure,
                  _i7.ResponseWrapper<List<_i8.NewsArticle>?>>>);
}
